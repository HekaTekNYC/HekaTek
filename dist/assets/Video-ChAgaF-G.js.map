{"version":3,"file":"Video-ChAgaF-G.js","sources":["../../src/hooks/use-is-visible.jsx","../../src/components/video/Video.jsx"],"sourcesContent":["import {useEffect, useRef, useState} from \"react\"\n\nconst useIsVisible = (options, once = false) => {\n  const optionsRef = useRef(options)\n  const [isVisible, setIsVisible] = useState(false)\n  const targetRef = useRef(null)\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setIsVisible(true)\n          if (once) {\n            observer.unobserve(entry.target)\n            observer.disconnect()\n          }\n        } else {\n          setIsVisible(false)\n        }\n      })\n    }, optionsRef.current)\n\n    if (targetRef.current) {\n      observer.observe(targetRef.current)\n    }\n\n    return () => {\n      if (targetRef.current) {\n        observer.unobserve(targetRef.current)\n      }\n      observer.disconnect()\n    }\n  }, [once])\n\n  return {isVisible, targetRef}\n}\n\nexport {useIsVisible}\n","import {useEffect, useRef} from \"react\"\nimport {useIsVisible} from \"../../hooks/use-is-visible\"\n\nconst VideoComponent = ({src, alt}) => {\n  const {isVisible, targetRef} = useIsVisible(\n    {\n      root: null,\n      rootMargin: \"200px\",\n      threshold: 0.1,\n    },\n    false\n  )\n\n  const videoRef = useRef(null)\n\n  useEffect(() => {\n    if (videoRef.current) {\n      if (isVisible) {\n        videoRef.current.play().catch(e => {\n          console.error(\"Failed to play video:, e\")\n        })\n      } else {\n        videoRef.current.pause()\n      }\n    }\n  }, [isVisible])\n\n  return (\n    <span\n      ref={targetRef}\n      style={{\n        position: \"relative\",\n        minHeight: \"50px\",\n        height: \"100%\",\n      }}\n    >\n      <video\n        ref={videoRef}\n        loop\n        muted\n        autoPlay={true}\n        preload=\"none\"\n        playsInline\n        aria-label={alt}\n        style={{\n          objectFit: \"contain\",\n          display: \"block\",\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        <source src={src} type=\"video/mp4\" />\n        Your browser does not support the video tag. Please try viewing this\n        page in a modern browser.\n      </video>\n    </span>\n  )\n}\n\nexport default VideoComponent\n"],"names":["useIsVisible","options","once","optionsRef","useRef","isVisible","setIsVisible","useState","targetRef","useEffect","observer","entries","entry","VideoComponent","src","alt","videoRef","e","jsx","jsxs"],"mappings":"0CAEA,MAAMA,EAAe,CAACC,EAASC,EAAO,KAAU,CACxC,MAAAC,EAAaC,SAAOH,CAAO,EAC3B,CAACI,EAAWC,CAAY,EAAIC,EAAAA,SAAS,EAAK,EAC1CC,EAAYJ,SAAO,IAAI,EAE7BK,OAAAA,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAW,IAAI,qBAAgCC,GAAA,CACnDA,EAAQ,QAAiBC,GAAA,CACnBA,EAAM,gBACRN,EAAa,EAAI,EACbJ,IACOQ,EAAA,UAAUE,EAAM,MAAM,EAC/BF,EAAS,WAAW,IAGtBJ,EAAa,EAAK,CACpB,CACD,CAAA,EACAH,EAAW,OAAO,EAErB,OAAIK,EAAU,SACHE,EAAA,QAAQF,EAAU,OAAO,EAG7B,IAAM,CACPA,EAAU,SACHE,EAAA,UAAUF,EAAU,OAAO,EAEtCE,EAAS,WAAW,CACtB,CAAA,EACC,CAACR,CAAI,CAAC,EAEF,CAAC,UAAAG,EAAW,UAAAG,CAAS,CAC9B,EChCMK,EAAiB,CAAC,CAAC,IAAAC,EAAK,IAAAC,KAAS,CAC/B,KAAA,CAAC,UAAAV,EAAW,UAAAG,CAAA,EAAaR,EAC7B,CACE,KAAM,KACN,WAAY,QACZ,UAAW,EACb,EACA,EACF,EAEMgB,EAAWZ,SAAO,IAAI,EAE5BK,OAAAA,EAAAA,UAAU,IAAM,CACVO,EAAS,UACPX,EACFW,EAAS,QAAQ,KAAO,EAAA,MAAWC,GAAA,CACjC,QAAQ,MAAM,0BAA0B,CAAA,CACzC,EAEDD,EAAS,QAAQ,MAAM,EAE3B,EACC,CAACX,CAAS,CAAC,EAGZa,EAAA,IAAC,OAAA,CACC,IAAKV,EACL,MAAO,CACL,SAAU,WACV,UAAW,OACX,OAAQ,MACV,EAEA,SAAAW,EAAA,KAAC,QAAA,CACC,IAAKH,EACL,KAAI,GACJ,MAAK,GACL,SAAU,GACV,QAAQ,OACR,YAAW,GACX,aAAYD,EACZ,MAAO,CACL,UAAW,UACX,QAAS,QACT,MAAO,OACP,OAAQ,MACV,EAEA,SAAA,CAACG,EAAAA,IAAA,SAAA,CAAO,IAAAJ,EAAU,KAAK,WAAY,CAAA,EAAE,gGAAA,CAAA,CAAA,CAGvC,CACF,CAEJ"}